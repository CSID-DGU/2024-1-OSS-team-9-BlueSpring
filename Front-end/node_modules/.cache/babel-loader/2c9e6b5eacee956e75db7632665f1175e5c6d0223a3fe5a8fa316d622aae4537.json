{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\OSS_BLUESPRING\\\\Front-end\\\\src\\\\components\\\\NewsItem.jsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsItemBlock = styled.div`\n    display: flex;\n    .thumbnail {\n        margin-right: 1rem;\n        img {\n            display: block;\n            width: 160px;\n            height: 100px;\n            object-fit: cover;\n        }\n    }\n    .contents {\n        h3{\n            color: black;\n            margin: 0;\n            a{\n                color: black;\n                text-decoration-line: none;\n            }\n        }\n        p {\n            margin: 0;\n            line-height: 1.5;\n            margin-top: 0.5rem;\n            white-space: normal;\n        }\n    }\n    & + & {\n        margin-top: 3rem;\n    }\n`;\n_c = NewsItemBlock;\nfunction NewsItem({\n  article\n}) {\n  _s();\n  // article을 prop로 받아온다.\n  // article에는 'title', 'description', 'url', 'urlToImage'의 정보가 들어있음\n  const {\n    title,\n    description,\n    url,\n    urlToImage\n  } = article;\n  const navigate = useNavigate();\n  let truncatedDescription = \"\";\n  if (description != null) {\n    truncatedDescription = description.length > 100 ? `${description.slice(0, 120)}...` : description;\n  }\n  //구조 분해를 이용해서 article.title → title로 할당하기\n  const handleClick = () => {\n    navigate('/newspage', {\n      state: {\n        article\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(NewsItemBlock, {\n    onClick: handleClick,\n    children: [urlToImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumbnail\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlToImage,\n        alt: \"thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: truncatedDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(NewsItem, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = NewsItem;\nexport default NewsItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"NewsItemBlock\");\n$RefreshReg$(_c2, \"NewsItem\");","map":{"version":3,"names":["styled","useNavigate","jsxDEV","_jsxDEV","NewsItemBlock","div","_c","NewsItem","article","_s","title","description","url","urlToImage","navigate","truncatedDescription","length","slice","handleClick","state","onClick","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/user/Desktop/OSS_BLUESPRING/Front-end/src/components/NewsItem.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NewsItemBlock = styled.div`\r\n    display: flex;\r\n    .thumbnail {\r\n        margin-right: 1rem;\r\n        img {\r\n            display: block;\r\n            width: 160px;\r\n            height: 100px;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n    .contents {\r\n        h3{\r\n            color: black;\r\n            margin: 0;\r\n            a{\r\n                color: black;\r\n                text-decoration-line: none;\r\n            }\r\n        }\r\n        p {\r\n            margin: 0;\r\n            line-height: 1.5;\r\n            margin-top: 0.5rem;\r\n            white-space: normal;\r\n        }\r\n    }\r\n    & + & {\r\n        margin-top: 3rem;\r\n    }\r\n`;\r\n\r\nfunction NewsItem({article}){\r\n    // article을 prop로 받아온다.\r\n    // article에는 'title', 'description', 'url', 'urlToImage'의 정보가 들어있음\r\n    const { title, description, url, urlToImage} = article;\r\n    const navigate = useNavigate();\r\n    \r\n    let truncatedDescription=\"\";\r\n    if(description!=null){\r\n        truncatedDescription = description.length > 100? `${description.slice(0, 120)}...` : description;\r\n    }\r\n    //구조 분해를 이용해서 article.title → title로 할당하기\r\n    const handleClick = () => {\r\n        navigate('/newspage', { state: { article } });\r\n      };\r\n    return (\r\n        <NewsItemBlock onClick={handleClick}>\r\n            {/* urlToImage가 있는 경우: 썸네일 요소 형성 */}\r\n            {urlToImage && (\r\n                <div className=\"thumbnail\">\r\n                    <img src={urlToImage} alt=\"thumbnail\" />\r\n                </div>\r\n            )}\r\n            {/* 컨텐츠 영역 */}\r\n            <div className=\"contents\">\r\n                {/* 제목 */}\r\n                <h3>\r\n                    {title}\r\n                </h3>\r\n                {/* 설명 */}\r\n                <p>{truncatedDescription}</p>\r\n            </div>\r\n            \r\n        </NewsItemBlock>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default NewsItem;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GA9BIF,aAAa;AAgCnB,SAASG,QAAQA,CAAC;EAACC;AAAO,CAAC,EAAC;EAAAC,EAAA;EACxB;EACA;EACA,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,GAAG;IAAEC;EAAU,CAAC,GAAGL,OAAO;EACtD,MAAMM,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,IAAIc,oBAAoB,GAAC,EAAE;EAC3B,IAAGJ,WAAW,IAAE,IAAI,EAAC;IACjBI,oBAAoB,GAAGJ,WAAW,CAACK,MAAM,GAAG,GAAG,GAAG,GAAEL,WAAW,CAACM,KAAK,CAAC,CAAC,EAAE,GAAG,CAAE,KAAI,GAAGN,WAAW;EACpG;EACA;EACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACtBJ,QAAQ,CAAC,WAAW,EAAE;MAAEK,KAAK,EAAE;QAAEX;MAAQ;IAAE,CAAC,CAAC;EAC/C,CAAC;EACH,oBACIL,OAAA,CAACC,aAAa;IAACgB,OAAO,EAAEF,WAAY;IAAAG,QAAA,GAE/BR,UAAU,iBACPV,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtBlB,OAAA;QAAKoB,GAAG,EAAEV,UAAW;QAACW,GAAG,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACR,eAEDzB,OAAA;MAAKmB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBAErBlB,OAAA;QAAAkB,QAAA,EACKX;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAELzB,OAAA;QAAAkB,QAAA,EAAIN;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAIxB;AAACnB,EAAA,CApCQF,QAAQ;EAAA,QAIIN,WAAW;AAAA;AAAA4B,GAAA,GAJvBtB,QAAQ;AAsCjB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}