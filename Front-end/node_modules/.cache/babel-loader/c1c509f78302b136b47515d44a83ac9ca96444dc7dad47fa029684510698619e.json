{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/kms32/IdeaProjects/2024-1 oss/2024-1-OSS-team-9-BlueSpring/Front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import styled from\"styled-components\";import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NewsItemBlock=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    .thumbnail {\\n        margin-right: 1rem;\\n        img {\\n            display: block;\\n            width: 160px;\\n            height: 100px;\\n            object-fit: cover;\\n        }\\n    }\\n    .contents {\\n        h3{\\n            color: black;\\n            margin: 0;\\n            a{\\n                color: black;\\n                text-decoration-line: none;\\n            }\\n        }\\n        p {\\n            margin: 0;\\n            line-height: 1.5;\\n            margin-top: 0.5rem;\\n            white-space: normal;\\n        }\\n    }\\n    & + & {\\n        margin-top: 3rem;\\n    }\\n\"])));function NewsItem(_ref){let{article}=_ref;// article을 prop로 받아온다.\n// article에는 'title', 'description', 'url', 'urlToImage'의 정보가 들어있음\nconst{title,description,url,urlToImage}=article;const navigate=useNavigate();let truncatedDescription=\"\";if(description!=null){truncatedDescription=description.length>100?\"\".concat(description.slice(0,120),\"...\"):description;}//구조 분해를 이용해서 article.title → title로 할당하기\nconst handleClick=()=>{navigate('/newspage',{state:{article}});};return/*#__PURE__*/_jsxs(NewsItemBlock,{onClick:handleClick,children:[urlToImage&&/*#__PURE__*/_jsx(\"div\",{className:\"thumbnail\",children:/*#__PURE__*/_jsx(\"img\",{src:urlToImage,alt:\"thumbnail\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"contents\",children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsx(\"p\",{children:truncatedDescription})]})]});}export default NewsItem;","map":{"version":3,"names":["styled","useNavigate","jsx","_jsx","jsxs","_jsxs","NewsItemBlock","div","_templateObject","_taggedTemplateLiteral","NewsItem","_ref","article","title","description","url","urlToImage","navigate","truncatedDescription","length","concat","slice","handleClick","state","onClick","children","className","src","alt"],"sources":["C:/Users/kms32/IdeaProjects/2024-1 oss/2024-1-OSS-team-9-BlueSpring/Front-end/src/components/NewsItem.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NewsItemBlock = styled.div`\r\n    display: flex;\r\n    .thumbnail {\r\n        margin-right: 1rem;\r\n        img {\r\n            display: block;\r\n            width: 160px;\r\n            height: 100px;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n    .contents {\r\n        h3{\r\n            color: black;\r\n            margin: 0;\r\n            a{\r\n                color: black;\r\n                text-decoration-line: none;\r\n            }\r\n        }\r\n        p {\r\n            margin: 0;\r\n            line-height: 1.5;\r\n            margin-top: 0.5rem;\r\n            white-space: normal;\r\n        }\r\n    }\r\n    & + & {\r\n        margin-top: 3rem;\r\n    }\r\n`;\r\n\r\nfunction NewsItem({article}){\r\n    // article을 prop로 받아온다.\r\n    // article에는 'title', 'description', 'url', 'urlToImage'의 정보가 들어있음\r\n    const { title, description, url, urlToImage} = article;\r\n    const navigate = useNavigate();\r\n    \r\n    let truncatedDescription=\"\";\r\n    if(description!=null){\r\n        truncatedDescription = description.length > 100? `${description.slice(0, 120)}...` : description;\r\n    }\r\n    //구조 분해를 이용해서 article.title → title로 할당하기\r\n    const handleClick = () => {\r\n        navigate('/newspage', { state: { article } });\r\n      };\r\n    return (\r\n        <NewsItemBlock onClick={handleClick}>\r\n            {/* urlToImage가 있는 경우: 썸네일 요소 형성 */}\r\n            {urlToImage && (\r\n                <div className=\"thumbnail\">\r\n                    <img src={urlToImage} alt=\"thumbnail\" />\r\n                </div>\r\n            )}\r\n            {/* 컨텐츠 영역 */}\r\n            <div className=\"contents\">\r\n                {/* 제목 */}\r\n                <h3>\r\n                    {title}\r\n                </h3>\r\n                {/* 설명 */}\r\n                <p>{truncatedDescription}</p>\r\n            </div>\r\n            \r\n        </NewsItemBlock>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default NewsItem;"],"mappings":"uMAAA,MAAO,CAAAA,MAAM,KAAM,mBAAmB,CACtC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,aAAa,CAAGN,MAAM,CAACO,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,inBA8B/B,CAED,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAW,IAAV,CAACC,OAAO,CAAC,CAAAD,IAAA,CACvB;AACA;AACA,KAAM,CAAEE,KAAK,CAAEC,WAAW,CAAEC,GAAG,CAAEC,UAAU,CAAC,CAAGJ,OAAO,CACtD,KAAM,CAAAK,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAE9B,GAAI,CAAAiB,oBAAoB,CAAC,EAAE,CAC3B,GAAGJ,WAAW,EAAE,IAAI,CAAC,CACjBI,oBAAoB,CAAGJ,WAAW,CAACK,MAAM,CAAG,GAAG,IAAAC,MAAA,CAAKN,WAAW,CAACO,KAAK,CAAC,CAAC,CAAE,GAAG,CAAC,QAAQP,WAAW,CACpG,CACA;AACA,KAAM,CAAAQ,WAAW,CAAGA,CAAA,GAAM,CACtBL,QAAQ,CAAC,WAAW,CAAE,CAAEM,KAAK,CAAE,CAAEX,OAAQ,CAAE,CAAC,CAAC,CAC/C,CAAC,CACH,mBACIP,KAAA,CAACC,aAAa,EAACkB,OAAO,CAAEF,WAAY,CAAAG,QAAA,EAE/BT,UAAU,eACPb,IAAA,QAAKuB,SAAS,CAAC,WAAW,CAAAD,QAAA,cACtBtB,IAAA,QAAKwB,GAAG,CAAEX,UAAW,CAACY,GAAG,CAAC,WAAW,CAAE,CAAC,CACvC,CACR,cAEDvB,KAAA,QAAKqB,SAAS,CAAC,UAAU,CAAAD,QAAA,eAErBtB,IAAA,OAAAsB,QAAA,CACKZ,KAAK,CACN,CAAC,cAELV,IAAA,MAAAsB,QAAA,CAAIP,oBAAoB,CAAI,CAAC,EAC5B,CAAC,EAEK,CAAC,CAIxB,CAEA,cAAe,CAAAR,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}